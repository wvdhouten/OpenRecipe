@using System.Text.Json;
@using OpenRecipe.Serialization
@using OpenRecipe.WebEditor.Data;
@using OpenRecipe.WebEditor.Models
@inject StorageContext DbContext
@inject Toaster Toaster
@page "/viewer"
@page "/viewer/{Id}"

<PageTitle>Recipe Viewer</PageTitle>
<section class="row mb-2">
    <div class="col-auto">
        <label for="file" class="link-secondary" role="button">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-upload" viewBox="0 0 16 16">
                <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5" />
                <path d="M7.646 1.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 2.707V11.5a.5.5 0 0 1-1 0V2.707L5.354 4.854a.5.5 0 1 1-.708-.708z" />
            </svg>
        </label>
        <InputFile id="file" OnChange="LoadFile" hidden />
    </div>
</section>
<hr />
@if (Recipe != null)
{
    <article>
        <header class="row bg-dark-subtle">
            <div class="mb-2">
                @foreach (var tag in Recipe.Tags)
                {
                    <span class="badge text-bg-warning col-auto">@tag</span>
                }
            </div>
            <h1>@Recipe.Name</h1>
            <h6>@Recipe.Description</h6>
            <hr />
            <div class="row">
                <div class="col-auto">
                    Prep: @($"{Recipe.PrepTime} min")
                </div>
                <div class="col-auto">
                    Cook: @($"{Recipe.CookTime} min")
                </div>
                <div class="col-auto">
                    <span>Servings:</span>
                    <a class="link-info" role="button" @onclick="() => DesiredServings--">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-dash-circle" viewBox="0 0 16 16">
                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                            <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8" />
                        </svg>
                    </a>
                    <span>@DesiredServings</span>
                    <a class="link-info" role="button" @onclick="() => DesiredServings++">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                        </svg>
                    </a>
                    <a class="link-info" role="button" @onclick="() => DesiredServings = Recipe.Servings ?? 1">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-counterclockwise" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2z" />
                            <path d="M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466" />
                        </svg>
                    </a>
                </div>
            </div>
        </header>
        <section class="row">
            <ul class="nav nav-tabs" id="tab-list" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link link-light active" id="ingredients-tab" data-bs-toggle="tab" data-bs-target="#ingredients-tab-pane" type="button" role="tab" aria-controls="ingredients-tab-pane" aria-selected="true">Ingredients</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link link-light" id="instructions-tab" data-bs-toggle="tab" data-bs-target="#instructions-tab-pane" type="button" role="tab" aria-controls="instructions-tab-pane" aria-selected="false">Instructions</button>
                </li>
                <li class="nav-item" role="presentation" hidden="@(Recipe.Notes.Count < 1)">
                    <button class="nav-link link-light" id="notes-tab" data-bs-toggle="tab" data-bs-target="#notes-tab-pane" type="button" role="tab" aria-controls="notes-tab-pane" aria-selected="false">Instructions</button>
                </li>
            </ul>
            <div class="tab-content" id="tab-content">
                <div class="tab-pane show active" id="ingredients-tab-pane" role="tabpanel" aria-labelledby="ingredients-tab" tabindex="0">
                    <ul class="list-group">
                        @foreach (var ingredient in Recipe.Ingredients)
                        {
                            <li class="list-group-item">
                                <label>
                                    <input class="form-check-input" type="checkbox" />
                                    <span>@ingredient.Name: @ScaleIngredient(ingredient) @ingredient.Unit</span>
                                </label>
                                <ul hidden="@(!ingredient.Notes.Any())">
                                    @foreach (var note in ingredient.Notes)
                                    {
                                        <li>@note</li>
                                    }
                                </ul>
                            </li>
                        }
                    </ul>
                </div>
                <div class="tab-pane" id="instructions-tab-pane" role="tabpanel" aria-labelledby="instructions-tab" tabindex="0">
                    <ul class="list-group">
                        @foreach (var instruction in Recipe.Instructions)
                        {
                            <li class="list-group-item">
                                <label>
                                    <input class="form-check-input" type="checkbox" />
                                    <span>@instruction</span>
                                </label>
                            </li>
                        }
                    </ul>
                </div>
                <div class="tab-pane" id="notes-tab-pane" role="tabpanel" aria-labelledby="notes-tab" tabindex="0" hidden="@(Recipe.Notes.Count < 1)">
                    <ul class="list-group">
                        @foreach (var note in Recipe.Notes)
                        {
                            <li class="list-group-item">@note</li>
                        }
                    </ul>
                </div>
            </div>
        </section>
    </article>
}

@code {
    [Parameter]
    public string? Id { get; set; } = null;
    private Recipe? Recipe { get; set; } = null;
    private int DesiredServings { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        if (Id == null)
            return;

        Recipe = await DbContext.Recipes.GetAsync(Id);
        if (Recipe == null)
            return;

        DesiredServings = Recipe.Servings ?? 0;
    }

    private double ScaleIngredient(Ingredient ingredient)
    {
        if (!ingredient.IsScaling)
            return ingredient.Quantity;

        return Math.Round(ingredient.Quantity / (Recipe?.Servings ?? 1) * DesiredServings, 2);
    }

    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        Recipe = RecipeSerializer.Deserialize(await new StreamContent(e.File.OpenReadStream()).ReadAsStringAsync());
        await Toaster.CreateToastAsync($"Recipe '{Recipe.Name}' loaded.");
    }
}
